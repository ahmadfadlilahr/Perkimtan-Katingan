{
    "openapi": "3.0.0",
    "info": {
        "title": "Dinas Perkim API Documentation",
        "description": "RESTful API untuk sistem manajemen berita Dinas Perkim dengan Laravel Sanctum authentication. API ini dapat diakses dari berbagai domain dan environment.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://dinas-perkim.test",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/public/agenda": {
            "get": {
                "tags": [
                    "Agenda"
                ],
                "summary": "Mengambil daftar agenda publik",
                "description": "Menampilkan daftar agenda yang berstatus published dan publik dengan fitur filter",
                "operationId": "e9f4e118b355de322d2216853afd8d1b",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Kata kunci pencarian",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter berdasarkan kategori",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "rapat",
                                "sosialisasi",
                                "workshop",
                                "acara_publik"
                            ]
                        }
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Filter berdasarkan bulan (1-12)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 12,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Filter berdasarkan tahun",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Jumlah data per halaman",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil data agenda",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data agenda berhasil diambil"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgendaResource"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/agenda/{slug}": {
            "get": {
                "tags": [
                    "Agenda"
                ],
                "summary": "Mengambil detail agenda publik berdasarkan slug",
                "description": "Menampilkan detail agenda berdasarkan slug untuk publik",
                "operationId": "1093abe6007b37ead47829d88520974f",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug agenda",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil detail agenda",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data agenda berhasil diambil"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AgendaResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Agenda tidak ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Agenda tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/agenda": {
            "get": {
                "tags": [
                    "Agenda"
                ],
                "summary": "Mengambil daftar agenda untuk admin",
                "description": "Menampilkan daftar agenda untuk admin dengan fitur filter lengkap",
                "operationId": "4e228d3855ddbe7b8a268faefb0cf63c",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Kata kunci pencarian",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter berdasarkan status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "draft",
                                "published",
                                "archived"
                            ]
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter berdasarkan kategori",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "rapat",
                                "sosialisasi",
                                "workshop",
                                "acara_publik"
                            ]
                        }
                    },
                    {
                        "name": "is_publik",
                        "in": "query",
                        "description": "Filter berdasarkan status publik",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter tanggal mulai (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter tanggal akhir (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Jumlah data per halaman",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil data agenda",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data agenda berhasil diambil"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgendaResource"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Agenda"
                ],
                "summary": "Membuat agenda baru",
                "description": "Menambahkan agenda baru ke sistem",
                "operationId": "e5aa5b04e626f7db15465cdcbe46a233",
                "requestBody": {
                    "description": "Data agenda yang akan dibuat",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AgendaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Agenda berhasil dibuat",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Agenda berhasil dibuat"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AgendaResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Gagal membuat agenda: error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/agenda/{agenda}": {
            "get": {
                "tags": [
                    "Agenda"
                ],
                "summary": "Mengambil detail agenda berdasarkan ID",
                "description": "Menampilkan detail agenda berdasarkan ID untuk admin",
                "operationId": "9a7c6bbd5e396593c21b83a1dc0f06f5",
                "parameters": [
                    {
                        "name": "agenda",
                        "in": "path",
                        "description": "ID agenda",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil detail agenda",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data agenda berhasil diambil"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AgendaResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Agenda tidak ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Agenda tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Agenda"
                ],
                "summary": "Memperbarui agenda",
                "description": "Memperbarui data agenda yang sudah ada",
                "operationId": "eb1fe7345b61b7f2951bc01712834b82",
                "parameters": [
                    {
                        "name": "agenda",
                        "in": "path",
                        "description": "ID agenda",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Data agenda yang akan diperbarui",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AgendaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Agenda berhasil diperbarui",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Agenda berhasil diperbarui"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AgendaResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Agenda tidak ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Agenda tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Gagal memperbarui agenda: error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Agenda"
                ],
                "summary": "Menghapus agenda",
                "description": "Menghapus agenda dari sistem",
                "operationId": "b6b9df208d237df34b9026824bab108f",
                "parameters": [
                    {
                        "name": "agenda",
                        "in": "path",
                        "description": "ID agenda",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Agenda berhasil dihapus",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Agenda berhasil dihapus"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Agenda tidak ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Agenda tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Gagal menghapus agenda: error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user and get token",
                "operationId": "222b2625838e3c57e017987f73598fda",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abc123xyz..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user and revoke token",
                "operationId": "ad65cbbd4e9f201619eae184a5961a98",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current authenticated user",
                "operationId": "961ad57987905b44ae2e2f40b82e76de",
                "responses": {
                    "200": {
                        "description": "Current user information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/berita": {
            "get": {
                "tags": [
                    "Berita"
                ],
                "summary": "[PROTECTED] Menampilkan semua data berita",
                "description": "Endpoint untuk admin melihat semua berita termasuk draft",
                "operationId": "c55f86825054384646f5f44b689abb9b",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter berdasarkan status (published/draft)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "published",
                                "draft"
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Jumlah data per halaman (default: 10)",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operasi berhasil. Mengembalikan daftar berita.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Berita"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Berita"
                ],
                "summary": "Membuat berita baru",
                "operationId": "12d9e4f20f45f03041ec10c816faa78a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "judul",
                                    "isi",
                                    "status"
                                ],
                                "properties": {
                                    "judul": {
                                        "description": "Judul berita",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "penulis": {
                                        "description": "Nama penulis (optional, akan menggunakan user login)",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "isi": {
                                        "description": "Konten berita",
                                        "type": "string"
                                    },
                                    "gambar": {
                                        "description": "File gambar berita",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "status": {
                                        "description": "Status publikasi",
                                        "type": "string",
                                        "enum": [
                                            "published",
                                            "draft"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Berita berhasil dibuat",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Berita"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/berita/{berita}": {
            "get": {
                "tags": [
                    "Berita"
                ],
                "summary": "[PROTECTED] Menampilkan detail satu berita",
                "description": "Endpoint untuk admin melihat detail berita terincluding yang masih draft",
                "operationId": "726df897ef0151f622e7b19528379b2c",
                "parameters": [
                    {
                        "name": "berita",
                        "in": "path",
                        "description": "ID dari berita",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operasi berhasil",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Berita"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data tidak ditemukan"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Berita"
                ],
                "summary": "Mengupdate data berita",
                "operationId": "145ec52c8e0eae820fa9b2fb874b6c18",
                "parameters": [
                    {
                        "name": "berita",
                        "in": "path",
                        "description": "ID berita",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "judul",
                                    "penulis",
                                    "isi",
                                    "status"
                                ],
                                "properties": {
                                    "judul": {
                                        "description": "Judul berita",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "penulis": {
                                        "description": "Nama penulis",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "isi": {
                                        "description": "Konten berita",
                                        "type": "string"
                                    },
                                    "gambar": {
                                        "description": "File gambar berita (opsional)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "status": {
                                        "description": "Status publikasi",
                                        "type": "string",
                                        "enum": [
                                            "published",
                                            "draft"
                                        ]
                                    },
                                    "_method": {
                                        "description": "Method spoofing untuk Laravel",
                                        "type": "string",
                                        "enum": [
                                            "PUT"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Berita berhasil diupdate",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Berita"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data tidak ditemukan"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Berita"
                ],
                "summary": "Menghapus data berita",
                "operationId": "de11f7558513883df15d50d91423a2ea",
                "parameters": [
                    {
                        "name": "berita",
                        "in": "path",
                        "description": "ID berita",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Berita berhasil dihapus",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Data tidak ditemukan"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/public/berita": {
            "get": {
                "tags": [
                    "Berita"
                ],
                "summary": "[PUBLIC] Daftar berita yang sudah dipublish",
                "description": "Endpoint public untuk mengambil daftar berita yang sudah dipublish tanpa perlu authentication",
                "operationId": "20e0bec11568e2b10f56129845fd505a",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Jumlah data per halaman (default: 10)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Pencarian berdasarkan judul berita",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "pengumuman"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil data berita public",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data berita berhasil diambil"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Berita"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/berita/{slug}": {
            "get": {
                "tags": [
                    "Berita"
                ],
                "summary": "[PUBLIC] Detail berita yang sudah dipublish",
                "description": "Endpoint public untuk melihat detail berita berdasarkan slug tanpa perlu authentication",
                "operationId": "74c0b89e989fd7f4f83f295acc67d1a2",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug dari berita",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "pengumuman-penting-2025"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil detail berita",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Detail Data Berita"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Berita"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Berita tidak ditemukan",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dashboard/stats": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get dashboard statistics (Admin)",
                "operationId": "654e1617f74d2b9e0654ec77620d960b",
                "responses": {
                    "200": {
                        "description": "Dashboard statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Dashboard statistics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "counts": {
                                                    "properties": {
                                                        "berita": {
                                                            "type": "integer",
                                                            "example": 25
                                                        },
                                                        "agenda": {
                                                            "type": "integer",
                                                            "example": 12
                                                        },
                                                        "galeri": {
                                                            "type": "integer",
                                                            "example": 18
                                                        },
                                                        "pejabat": {
                                                            "type": "integer",
                                                            "example": 8
                                                        },
                                                        "pesan": {
                                                            "type": "integer",
                                                            "example": 45
                                                        },
                                                        "slide": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "unduhan": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "users": {
                                                            "type": "integer",
                                                            "example": 3
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "recent_stats": {
                                                    "properties": {
                                                        "berita_this_month": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "agenda_this_month": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "pesan_this_month": {
                                                            "type": "integer",
                                                            "example": 12
                                                        },
                                                        "new_users_this_month": {
                                                            "type": "integer",
                                                            "example": 1
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "status_summary": {
                                                    "properties": {
                                                        "active_slides": {
                                                            "type": "integer",
                                                            "example": 4
                                                        },
                                                        "published_berita": {
                                                            "type": "integer",
                                                            "example": 20
                                                        },
                                                        "upcoming_agenda": {
                                                            "type": "integer",
                                                            "example": 8
                                                        },
                                                        "unread_pesan": {
                                                            "type": "integer",
                                                            "example": 15
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/dashboard/recent-activities": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get recent activities (Admin)",
                "operationId": "355348856235458750cd21c18f74d237",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of activities to retrieve",
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 50,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recent activities retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Recent activities retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "berita"
                                                    },
                                                    "action": {
                                                        "type": "string",
                                                        "example": "created"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "New article published"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "user": {
                                                        "type": "string",
                                                        "example": "Admin User"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/dashboard/summary": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get dashboard summary with charts data (Admin)",
                "operationId": "e04ac99c958d75bb1acbe01eeef47c67",
                "responses": {
                    "200": {
                        "description": "Dashboard summary retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Dashboard summary retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "monthly_stats": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "month": {
                                                                "type": "string",
                                                                "example": "2025-01"
                                                            },
                                                            "berita": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "agenda": {
                                                                "type": "integer",
                                                                "example": 3
                                                            },
                                                            "pesan": {
                                                                "type": "integer",
                                                                "example": 12
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "content_distribution": {
                                                    "properties": {
                                                        "berita": {
                                                            "type": "integer",
                                                            "example": 25
                                                        },
                                                        "agenda": {
                                                            "type": "integer",
                                                            "example": 12
                                                        },
                                                        "galeri": {
                                                            "type": "integer",
                                                            "example": 18
                                                        },
                                                        "unduhan": {
                                                            "type": "integer",
                                                            "example": 15
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "popular_content": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "example": "berita"
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Popular Article"
                                                            },
                                                            "views": {
                                                                "type": "integer",
                                                                "example": 150
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/public/galeri": {
            "get": {
                "tags": [
                    "Galeri"
                ],
                "summary": "Get list of public galleries",
                "description": "Returns paginated list of galleries without authentication",
                "operationId": "bf2e50223bf48915ef44e2cb4c335bbf",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search galleries by description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (max 100)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by field (id, keterangan, created_at)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order (asc, desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of galleries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GaleriResource"
                                            }
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data galeri berhasil diambil"
                                        },
                                        "meta": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Terjadi kesalahan sistem"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/galeri/{id}": {
            "get": {
                "tags": [
                    "Galeri"
                ],
                "summary": "Get single gallery by ID (public)",
                "description": "Returns a single gallery without authentication",
                "operationId": "8b9a6cb711fbb4418d5b2ec6a0ff6400",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Gallery ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gallery details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GaleriResource"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data galeri berhasil diambil"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Gallery not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Galeri tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/galeri": {
            "get": {
                "tags": [
                    "Galeri"
                ],
                "summary": "Get list of galleries (admin)",
                "description": "Returns paginated list of all galleries with authentication required",
                "operationId": "29222ce11d14a94811dadea090a6276f",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search galleries by description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (max 100)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by field (id, keterangan, created_at)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order (asc, desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of galleries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GaleriResource"
                                            }
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data galeri berhasil diambil"
                                        },
                                        "meta": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Galeri"
                ],
                "summary": "Create new gallery",
                "description": "Create a new gallery item with image upload",
                "operationId": "a05bc077b01ca56ea1b24f01bb1b83b5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "gambar"
                                ],
                                "properties": {
                                    "keterangan": {
                                        "type": "string",
                                        "example": "Foto kegiatan gotong royong di kampung"
                                    },
                                    "gambar": {
                                        "description": "Image file (jpg, jpeg, png, webp - max 2MB)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Gallery created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GaleriResource"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Galeri berhasil dibuat"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "gambar": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "keterangan": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/galeri/{galeri}": {
            "get": {
                "tags": [
                    "Galeri"
                ],
                "summary": "Get single gallery by ID (admin)",
                "description": "Returns a single gallery with authentication required",
                "operationId": "ca1a19021e45d56dc00e623efbd561b4",
                "parameters": [
                    {
                        "name": "galeri",
                        "in": "path",
                        "description": "Gallery ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gallery details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GaleriResource"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data galeri berhasil diambil"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Gallery not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Galeri tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Galeri"
                ],
                "summary": "Update gallery",
                "description": "Update an existing gallery item (use POST with _method=PUT for file uploads)",
                "operationId": "af671472f16e524889d2b07ddd087412",
                "parameters": [
                    {
                        "name": "galeri",
                        "in": "path",
                        "description": "Gallery ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    },
                                    "keterangan": {
                                        "type": "string",
                                        "example": "Foto kegiatan gotong royong yang diperbarui"
                                    },
                                    "gambar": {
                                        "description": "New image file (optional - jpg, jpeg, png, webp - max 2MB)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Gallery updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GaleriResource"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Galeri berhasil diperbarui"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "gambar": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "keterangan": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Gallery not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Galeri tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Galeri"
                ],
                "summary": "Delete gallery",
                "description": "Delete a gallery item and its associated image file",
                "operationId": "f9d29226046ac61ca209da3688553642",
                "parameters": [
                    {
                        "name": "galeri",
                        "in": "path",
                        "description": "Gallery ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gallery deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Galeri berhasil dihapus"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Gallery not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Galeri tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/public/pejabat": {
            "get": {
                "tags": [
                    "Pejabat"
                ],
                "summary": "Get list of officials (public)",
                "description": "Returns paginated list of officials ordered by position without authentication",
                "operationId": "9b0e3c70a278d445e82a3b543bd7e4b6",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search officials by name, position, or NIP",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (max 100)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by field (urutan, nama, jabatan, created_at)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "urutan"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order (asc, desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of officials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PejabatResource"
                                            }
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data pejabat berhasil diambil"
                                        },
                                        "meta": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Terjadi kesalahan sistem"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/pejabat/{id}": {
            "get": {
                "tags": [
                    "Pejabat"
                ],
                "summary": "Get single official by ID (public)",
                "description": "Returns a single official without authentication",
                "operationId": "89b652a352b48656b48f213317861d55",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Official ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Official details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PejabatResource"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data pejabat berhasil diambil"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Official not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pejabat tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pejabat": {
            "get": {
                "tags": [
                    "Pejabat"
                ],
                "summary": "Get list of officials (admin)",
                "description": "Returns paginated list of all officials with authentication required",
                "operationId": "8008c24f51be7b38a794e73e3c42b9ee",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search officials by name, position, or NIP",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (max 100)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by field (id, nama, jabatan, nip, urutan, created_at, updated_at)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "urutan"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order (asc, desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of officials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PejabatResource"
                                            }
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data pejabat berhasil diambil"
                                        },
                                        "meta": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Pejabat"
                ],
                "summary": "Create new official",
                "description": "Create a new official with optional photo upload",
                "operationId": "d52f60dfc7824be499a9a0cbeeadddbe",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "nama",
                                    "jabatan"
                                ],
                                "properties": {
                                    "nama": {
                                        "description": "Official name",
                                        "type": "string",
                                        "example": "Dr. John Doe, M.T."
                                    },
                                    "jabatan": {
                                        "description": "Official position",
                                        "type": "string",
                                        "example": "Kepala Dinas Perumahan dan Kawasan Permukiman"
                                    },
                                    "nip": {
                                        "description": "Official NIP (optional)",
                                        "type": "string",
                                        "example": "197001011990011001"
                                    },
                                    "urutan": {
                                        "description": "Display order (optional, auto-increment if not provided)",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "foto": {
                                        "description": "Official photo (optional - jpg, jpeg, png, webp - max 2MB)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Official created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PejabatResource"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pejabat berhasil dibuat"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "nama": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "jabatan": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "nip": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "foto": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "urutan": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/pejabat/{pejabat}": {
            "get": {
                "tags": [
                    "Pejabat"
                ],
                "summary": "Get single official by ID (admin)",
                "description": "Returns a single official with authentication required",
                "operationId": "21a3008a861e183054d26942a1c02a7d",
                "parameters": [
                    {
                        "name": "pejabat",
                        "in": "path",
                        "description": "Official ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Official details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PejabatResource"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data pejabat berhasil diambil"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Official not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pejabat tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Pejabat"
                ],
                "summary": "Update official",
                "description": "Update an existing official (use POST with _method=PUT for file uploads)",
                "operationId": "408fa8c9241095afed2d0f8d1699e699",
                "parameters": [
                    {
                        "name": "pejabat",
                        "in": "path",
                        "description": "Official ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "nama",
                                    "jabatan"
                                ],
                                "properties": {
                                    "_method": {
                                        "type": "string",
                                        "example": "PUT"
                                    },
                                    "nama": {
                                        "description": "Updated official name",
                                        "type": "string",
                                        "example": "Dr. John Doe, M.T. (Updated)"
                                    },
                                    "jabatan": {
                                        "description": "Updated official position",
                                        "type": "string",
                                        "example": "Kepala Dinas (Updated)"
                                    },
                                    "nip": {
                                        "description": "Official NIP (optional)",
                                        "type": "string",
                                        "example": "197001011990011001"
                                    },
                                    "urutan": {
                                        "description": "Display order (optional)",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "foto": {
                                        "description": "New official photo (optional - jpg, jpeg, png, webp - max 2MB)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Official updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PejabatResource"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pejabat berhasil diperbarui"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "nama": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "jabatan": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "nip": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "foto": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "urutan": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Official not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pejabat tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Pejabat"
                ],
                "summary": "Delete official",
                "description": "Delete an official and their associated photo file",
                "operationId": "01a4176c51ae73f339e6c466ec3ae8e8",
                "parameters": [
                    {
                        "name": "pejabat",
                        "in": "path",
                        "description": "Official ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Official deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pejabat berhasil dihapus"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Official not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pejabat tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/public/pesan": {
            "post": {
                "tags": [
                    "Pesan"
                ],
                "summary": "Send contact message (public)",
                "description": "Send a contact message from public users without authentication",
                "operationId": "14f2afb86b51c362a96e3fb191412296",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "nama_pengirim",
                                    "email_pengirim",
                                    "tipe_pesan",
                                    "subjek",
                                    "isi_pesan"
                                ],
                                "properties": {
                                    "nama_pengirim": {
                                        "description": "Sender name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email_pengirim": {
                                        "description": "Sender email",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "telepon": {
                                        "description": "Phone number (optional)",
                                        "type": "string",
                                        "example": "081234567890"
                                    },
                                    "tipe_pesan": {
                                        "description": "Message type",
                                        "type": "string",
                                        "enum": [
                                            "pengaduan",
                                            "pertanyaan",
                                            "saran",
                                            "lainnya"
                                        ],
                                        "example": "pertanyaan"
                                    },
                                    "subjek": {
                                        "description": "Message subject",
                                        "type": "string",
                                        "example": "Pertanyaan tentang perizinan bangunan"
                                    },
                                    "isi_pesan": {
                                        "description": "Message content",
                                        "type": "string",
                                        "example": "Saya ingin bertanya tentang prosedur perizinan bangunan..."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Message sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PesanResource"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pesan berhasil dikirim"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "nama_pengirim": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "email_pengirim": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "subjek": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "isi_pesan": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Terjadi kesalahan sistem"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pesan": {
            "get": {
                "tags": [
                    "Pesan"
                ],
                "summary": "Get list of messages (admin)",
                "description": "Returns paginated list of all contact messages with authentication required",
                "operationId": "b2ce48804690dccf36e608ce568f941f",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search messages by sender name, email, subject, or content",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "unread",
                                "read",
                                "replied"
                            ]
                        }
                    },
                    {
                        "name": "tipe_pesan",
                        "in": "query",
                        "description": "Filter by message type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pengaduan",
                                "pertanyaan",
                                "saran",
                                "lainnya"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (max 100)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort by field (id, nama_pengirim, email_pengirim, subjek, tipe_pesan, status, created_at, updated_at)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order (asc, desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of messages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PesanResource"
                                            }
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data pesan berhasil diambil"
                                        },
                                        "meta": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/pesan/{pesan}": {
            "get": {
                "tags": [
                    "Pesan"
                ],
                "summary": "Get single message by ID (admin)",
                "description": "Returns a single contact message with authentication required",
                "operationId": "c5fcd3a71909dc56ca46e598510fedb8",
                "parameters": [
                    {
                        "name": "pesan",
                        "in": "path",
                        "description": "Message ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PesanResource"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data pesan berhasil diambil"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Message not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pesan tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Pesan"
                ],
                "summary": "Update message status (admin)",
                "description": "Update message status or other details (admin only)",
                "operationId": "221135f02bf115f02a83e0d72e4f8004",
                "parameters": [
                    {
                        "name": "pesan",
                        "in": "path",
                        "description": "Message ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "description": "Message status",
                                        "type": "string",
                                        "enum": [
                                            "unread",
                                            "read",
                                            "replied"
                                        ],
                                        "example": "replied"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Message updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PesanResource"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Status pesan berhasil diperbarui"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Message not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pesan tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Pesan"
                ],
                "summary": "Delete message",
                "description": "Delete a contact message and its attachment (admin only)",
                "operationId": "562a690eff0b4c540f937e987c21203d",
                "parameters": [
                    {
                        "name": "pesan",
                        "in": "path",
                        "description": "Message ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pesan berhasil dihapus"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Message not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pesan tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/pesan/stats": {
            "get": {
                "tags": [
                    "Pesan"
                ],
                "summary": "Get message statistics (admin)",
                "description": "Get statistics about contact messages",
                "operationId": "e72fbdfe29245e4ca56e67693bb7fc8c",
                "responses": {
                    "200": {
                        "description": "Message statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Statistik pesan berhasil diambil"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_pesan": {
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "unread_count": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "read_count": {
                                                    "type": "integer",
                                                    "example": 75
                                                },
                                                "replied_count": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/public/slide": {
            "get": {
                "tags": [
                    "Slides"
                ],
                "summary": "Get active slides for public display",
                "operationId": "48b62d40bf1c9963334eea17613ca502",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SlideResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/public/slide/{id}": {
            "get": {
                "tags": [
                    "Slides"
                ],
                "summary": "Get a single active slide for public display",
                "operationId": "6f25a9fb260227512e91d40d2ead5537",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Slide ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/SlideResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Slide not found or not active",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Slide tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/slide": {
            "get": {
                "tags": [
                    "Slides"
                ],
                "summary": "Get all slides with search and pagination (Admin)",
                "operationId": "f953a5b1fb71940d68d272dc01846b05",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for judul, subjudul, or tombol_teks",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "urutan",
                            "enum": [
                                "id",
                                "judul",
                                "urutan",
                                "status",
                                "created_at",
                                "updated_at"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SlideResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Slides"
                ],
                "summary": "Create a new slide (Admin)",
                "operationId": "41fd1dc7570228520ad95a1757210b11",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "judul",
                                    "gambar",
                                    "status"
                                ],
                                "properties": {
                                    "judul": {
                                        "description": "Slide title",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "subjudul": {
                                        "description": "Slide subtitle",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "deskripsi": {
                                        "description": "Slide description",
                                        "type": "string"
                                    },
                                    "tombol_teks": {
                                        "description": "Button text",
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "tombol_link": {
                                        "description": "Button link",
                                        "type": "string",
                                        "format": "url",
                                        "maxLength": 255
                                    },
                                    "gambar": {
                                        "description": "Slide image (max 5MB, jpeg/jpg/png/gif/webp)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "urutan": {
                                        "description": "Display order",
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "status": {
                                        "description": "Slide status",
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Slide created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Slide berhasil dibuat"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SlideResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/slide/{slide}": {
            "get": {
                "tags": [
                    "Slides"
                ],
                "summary": "Get a single slide (Admin)",
                "operationId": "177dda6fd767431b049f4db6d6dad802",
                "parameters": [
                    {
                        "name": "slide",
                        "in": "path",
                        "description": "Slide ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/SlideResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Slide not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Slides"
                ],
                "summary": "Update a slide (Admin)",
                "operationId": "20b4674ac34e5531ebd388c3cb35bbb8",
                "parameters": [
                    {
                        "name": "slide",
                        "in": "path",
                        "description": "Slide ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "judul",
                                    "status"
                                ],
                                "properties": {
                                    "_method": {
                                        "type": "string",
                                        "enum": [
                                            "PUT",
                                            "PATCH"
                                        ]
                                    },
                                    "judul": {
                                        "description": "Slide title",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "subjudul": {
                                        "description": "Slide subtitle",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "deskripsi": {
                                        "description": "Slide description",
                                        "type": "string"
                                    },
                                    "tombol_teks": {
                                        "description": "Button text",
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "tombol_link": {
                                        "description": "Button link",
                                        "type": "string",
                                        "format": "url",
                                        "maxLength": 255
                                    },
                                    "gambar": {
                                        "description": "Slide image (max 5MB, jpeg/jpg/png/gif/webp)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "urutan": {
                                        "description": "Display order",
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "status": {
                                        "description": "Slide status",
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Slide updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Slide berhasil diperbarui"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SlideResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Slide not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Slides"
                ],
                "summary": "Delete a slide (Admin)",
                "operationId": "e4d51dcc56b5472d873d80b5ec40a0b3",
                "parameters": [
                    {
                        "name": "slide",
                        "in": "path",
                        "description": "Slide ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Slide deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Slide berhasil dihapus"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Slide not found"
                    },
                    "500": {
                        "description": "Failed to delete slide"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/slide/reorder": {
            "post": {
                "tags": [
                    "Slides"
                ],
                "summary": "Reorder slides position (Admin)",
                "operationId": "5bf9b08c2f00778dd3168dfd1c68d9a0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "slides": {
                                        "description": "Array of slides with new order",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "description": "Slide ID",
                                                    "type": "integer"
                                                },
                                                "urutan": {
                                                    "description": "New order position",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Slides reordered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Urutan slide berhasil diperbarui"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/slide/{slide}/toggle-status": {
            "put": {
                "tags": [
                    "Slides"
                ],
                "summary": "Toggle slide status (Admin)",
                "operationId": "99d1dbec80ab9ec2479c726e0721358d",
                "parameters": [
                    {
                        "name": "slide",
                        "in": "path",
                        "description": "Slide ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status toggled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Status slide berhasil diubah"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SlideResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Slide not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/slide/stats": {
            "get": {
                "tags": [
                    "Slides"
                ],
                "summary": "Get slide statistics (Admin)",
                "operationId": "7510697895ab282363f2915520829997",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "total_slides": {
                                                    "description": "Total number of slides",
                                                    "type": "integer"
                                                },
                                                "active_slides": {
                                                    "description": "Number of active slides",
                                                    "type": "integer"
                                                },
                                                "inactive_slides": {
                                                    "description": "Number of inactive slides",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/public/unduhan": {
            "get": {
                "tags": [
                    "Unduhan"
                ],
                "summary": "Get files for public download",
                "operationId": "a2fbaa284bae52423ee73289beb08e1f",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for judul or deskripsi",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UnduhanResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/public/unduhan/{id}": {
            "get": {
                "tags": [
                    "Unduhan"
                ],
                "summary": "Get a single file for public download",
                "operationId": "c3302e0fbc88cd653ed75550923b9eab",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unduhan ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/UnduhanResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "File tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/unduhan/{id}/download": {
            "get": {
                "tags": [
                    "Unduhan"
                ],
                "summary": "Download a file",
                "operationId": "85b2079cb6874398fe2d4851e7f7b865",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unduhan ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File download",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File not found or file does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "File tidak ditemukan atau tidak tersedia"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/unduhan": {
            "get": {
                "tags": [
                    "Unduhan"
                ],
                "summary": "Get all files with search and pagination (Admin)",
                "operationId": "d4f7887fafda437a6196f86ca0149119",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for judul or deskripsi",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "id",
                            "enum": [
                                "id",
                                "judul",
                                "deskripsi",
                                "file",
                                "created_at",
                                "updated_at"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UnduhanResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Unduhan"
                ],
                "summary": "Create a new file (Admin)",
                "operationId": "2d95592be4aeb37aebcfd57a565ae662",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "judul",
                                    "file"
                                ],
                                "properties": {
                                    "judul": {
                                        "description": "File title",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "deskripsi": {
                                        "description": "File description",
                                        "type": "string"
                                    },
                                    "file": {
                                        "description": "File to upload (max 10MB, pdf/doc/docx/xls/xlsx/ppt/pptx/zip/rar/txt)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "File created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "File berhasil dibuat"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UnduhanResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/unduhan/{unduhan}": {
            "get": {
                "tags": [
                    "Unduhan"
                ],
                "summary": "Get a single file (Admin)",
                "operationId": "a22fdac40d8c1cbd92d5fe3e6b91dd84",
                "parameters": [
                    {
                        "name": "unduhan",
                        "in": "path",
                        "description": "Unduhan ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/UnduhanResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Unduhan"
                ],
                "summary": "Update a file (Admin)",
                "operationId": "5982b659eb7af8d7f35fe61c5132fbde",
                "parameters": [
                    {
                        "name": "unduhan",
                        "in": "path",
                        "description": "Unduhan ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "judul"
                                ],
                                "properties": {
                                    "_method": {
                                        "type": "string",
                                        "enum": [
                                            "PUT",
                                            "PATCH"
                                        ]
                                    },
                                    "judul": {
                                        "description": "File title",
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "deskripsi": {
                                        "description": "File description",
                                        "type": "string"
                                    },
                                    "file": {
                                        "description": "File to upload (max 10MB, pdf/doc/docx/xls/xlsx/ppt/pptx/zip/rar/txt)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "File updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "File berhasil diperbarui"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UnduhanResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "File not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Unduhan"
                ],
                "summary": "Delete a file (Admin)",
                "operationId": "169b3edf02b6b004439be592c824e311",
                "parameters": [
                    {
                        "name": "unduhan",
                        "in": "path",
                        "description": "Unduhan ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "File berhasil dihapus"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "File not found"
                    },
                    "500": {
                        "description": "Failed to delete file"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/unduhan/stats": {
            "get": {
                "tags": [
                    "Unduhan"
                ],
                "summary": "Get file statistics (Admin)",
                "operationId": "9239fdb9df62bba24ce8056d49ce171a",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "total_unduhan": {
                                                    "description": "Total number of files",
                                                    "type": "integer"
                                                },
                                                "total_file_size": {
                                                    "description": "Total file size in bytes",
                                                    "type": "integer"
                                                },
                                                "total_file_size_human": {
                                                    "description": "Human readable total file size",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get list of users (Admin)",
                "operationId": "566aed8efb436ca506e0ef51a032ecd9",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by name or email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "inactive"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Users retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "john@example.com"
                                                            },
                                                            "role": {
                                                                "type": "string",
                                                                "example": "admin"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "active"
                                                            },
                                                            "email_verified_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "nullable": true
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Create a new user (Admin)",
                "operationId": "be551c1d694a01c164966f58bfa77013",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "example": "password123"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "user"
                                        ],
                                        "example": "user"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "user"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users/{user}": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get user details (Admin)",
                "operationId": "f310aa35b9243239c65dbc8b8f4b135e",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User details retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "user"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Update user (Admin)",
                "operationId": "f1f65c5e73cb0b10fdd850447b672c28",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe Updated"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "john.updated@example.com"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "user"
                                        ],
                                        "example": "admin"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe Updated"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.updated@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "admin"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User Management"
                ],
                "summary": "Delete user (Admin)",
                "operationId": "cf641f0b739211ff3a1c21b1ef310591",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "403": {
                        "description": "Cannot delete your own account"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users/{user}/change-password": {
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Change user password (Admin)",
                "operationId": "200b9160c64d903bf105651aab11f225",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users/{user}/toggle-status": {
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Toggle user status (Admin)",
                "operationId": "6e53a3c9b79d43b69cbf43fdbec75aa3",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User status toggled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User status updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "inactive"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "403": {
                        "description": "Cannot deactivate your own account"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/public/visi-misi": {
            "get": {
                "tags": [
                    "Visi Misi"
                ],
                "summary": "Get all visi misi items",
                "operationId": "acefc4d6acc0858c26d0ac46b3d7d0e6",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by type (visi, misi)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "visi",
                                "misi"
                            ]
                        }
                    },
                    {
                        "name": "active_only",
                        "in": "query",
                        "description": "Show only active items",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "visi": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Visi"
                                                        },
                                                        "items": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/VisiMisi"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/visi-misi": {
            "post": {
                "tags": [
                    "Visi Misi"
                ],
                "summary": "Create a new visi misi item",
                "operationId": "6765871568e40c9f514155f10d4a8b53",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "title",
                                    "content"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "visi",
                                            "misi"
                                        ]
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Visi Organisasi"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Menjadi organisasi terdepan..."
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Deskripsi tambahan"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "eye"
                                    },
                                    "color_class": {
                                        "type": "string",
                                        "example": "blue"
                                    },
                                    "order_position": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Item created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VisiMisiResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/visi-misi/{visiMisi}": {
            "get": {
                "tags": [
                    "Visi Misi"
                ],
                "summary": "Get a specific visi misi item",
                "operationId": "1d9b0843e9097660a14cb815058f82af",
                "parameters": [
                    {
                        "name": "visiMisi",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VisiMisiResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Visi Misi"
                ],
                "summary": "Update a visi misi item",
                "operationId": "b453111507d7c575f2afa05d28bf6b13",
                "parameters": [
                    {
                        "name": "visiMisi",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "visi",
                                            "misi"
                                        ]
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "icon": {
                                        "type": "string"
                                    },
                                    "color_class": {
                                        "type": "string"
                                    },
                                    "order_position": {
                                        "type": "integer"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VisiMisiResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Visi Misi"
                ],
                "summary": "Delete a visi misi item",
                "operationId": "f8356c6b0a143400d0655c73ac2a08e3",
                "parameters": [
                    {
                        "name": "visiMisi",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Item deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/visi-misi/{visiMisi}/toggle-active": {
            "post": {
                "tags": [
                    "Visi Misi"
                ],
                "summary": "Toggle active status of a visi misi item",
                "operationId": "43aadc366dc1536150fd343ca52eac52",
                "parameters": [
                    {
                        "name": "visiMisi",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status toggled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VisiMisiResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/visi-misi/reorder": {
            "post": {
                "tags": [
                    "Visi Misi"
                ],
                "summary": "Reorder visi misi items within a type",
                "operationId": "bfec6719b9fedd6420e60cc4de19b0b6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "item_ids"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "visi",
                                            "misi"
                                        ]
                                    },
                                    "item_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Items reordered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Items reordered successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "TimestampFields": {
                "title": "Timestamp Fields",
                "description": "Common timestamp fields for all models",
                "properties": {
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-01T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-01T15:30:00Z"
                    }
                },
                "type": "object"
            },
            "CommonFilters": {
                "title": "Common Filter Parameters",
                "description": "Common filter parameters for list endpoints",
                "properties": {
                    "search": {
                        "description": "Search keyword",
                        "type": "string",
                        "example": "keyword"
                    },
                    "per_page": {
                        "description": "Number of items per page",
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1,
                        "example": 15
                    },
                    "page": {
                        "description": "Page number",
                        "type": "integer",
                        "minimum": 1,
                        "example": 1
                    },
                    "sort_by": {
                        "description": "Field to sort by",
                        "type": "string",
                        "example": "created_at"
                    },
                    "sort_order": {
                        "description": "Sort order",
                        "type": "string",
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "example": "desc"
                    }
                },
                "type": "object"
            },
            "StatusFilter": {
                "title": "Status Filter",
                "description": "Status-based filtering",
                "properties": {
                    "is_active": {
                        "description": "Filter by active status",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "MediaUpload": {
                "title": "Media Upload Schema",
                "description": "File upload schema for media",
                "properties": {
                    "file": {
                        "description": "File to upload",
                        "type": "string",
                        "format": "binary"
                    },
                    "alt_text": {
                        "description": "Alternative text for accessibility",
                        "type": "string",
                        "example": "Image description"
                    }
                },
                "type": "object"
            },
            "MediaResponse": {
                "title": "Media Response",
                "description": "Response schema for uploaded media",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "filename": {
                        "type": "string",
                        "example": "image.jpg"
                    },
                    "original_name": {
                        "type": "string",
                        "example": "original-image.jpg"
                    },
                    "mime_type": {
                        "type": "string",
                        "example": "image/jpeg"
                    },
                    "size": {
                        "description": "File size in bytes",
                        "type": "integer",
                        "example": 1024000
                    },
                    "url": {
                        "type": "string",
                        "example": "http://localhost:8000/storage/images/image.jpg"
                    },
                    "alt_text": {
                        "type": "string",
                        "example": "Image description"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "User name",
                        "type": "string"
                    },
                    "email": {
                        "description": "User email",
                        "type": "string",
                        "format": "email"
                    }
                },
                "type": "object"
            },
            "ApiResponse": {
                "title": "Standard API Response",
                "description": "Standard response format for all API endpoints",
                "properties": {
                    "success": {
                        "description": "Success status",
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "description": "Response message",
                        "type": "string",
                        "example": "Operation completed successfully"
                    },
                    "data": {
                        "description": "Response data",
                        "type": "object"
                    },
                    "meta": {
                        "description": "Additional metadata",
                        "type": "object"
                    },
                    "errors": {
                        "description": "Validation errors (when applicable)",
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "PaginationMeta": {
                "title": "Pagination Metadata",
                "description": "Pagination information for list endpoints",
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 10
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "total": {
                        "type": "integer",
                        "example": 150
                    },
                    "from": {
                        "type": "integer",
                        "example": 1
                    },
                    "to": {
                        "type": "integer",
                        "example": 15
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "title": "Validation Error Response",
                "description": "Response format for validation errors",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Validation failed"
                    },
                    "errors": {
                        "type": "object",
                        "example": {
                            "field_name": [
                                "The field is required."
                            ]
                        }
                    }
                },
                "type": "object"
            },
            "Berita": {
                "title": "Berita Model",
                "description": "Model data berita",
                "properties": {
                    "id": {
                        "description": "ID berita",
                        "type": "integer",
                        "example": 1
                    },
                    "judul": {
                        "description": "Judul berita",
                        "type": "string",
                        "example": "Judul Berita"
                    },
                    "slug": {
                        "description": "Slug berita",
                        "type": "string",
                        "example": "judul-berita"
                    },
                    "konten": {
                        "description": "Konten berita",
                        "type": "string",
                        "example": "Konten berita lengkap"
                    },
                    "excerpt": {
                        "description": "Excerpt berita",
                        "type": "string",
                        "example": "Ringkasan berita"
                    },
                    "gambar": {
                        "description": "Path gambar berita",
                        "type": "string",
                        "example": "berita/image.jpg"
                    },
                    "status": {
                        "description": "Status berita",
                        "type": "string",
                        "enum": [
                            "draft",
                            "published"
                        ],
                        "example": "published"
                    },
                    "tanggal_publish": {
                        "description": "Tanggal publish",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T10:00:00Z"
                    },
                    "views": {
                        "description": "Jumlah views",
                        "type": "integer",
                        "example": 100
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T10:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T10:00:00Z"
                    }
                },
                "type": "object"
            },
            "SlideResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "judul": {
                        "type": "string",
                        "example": "Welcome to Our Website"
                    },
                    "subjudul": {
                        "type": "string",
                        "example": "Providing excellent service"
                    },
                    "deskripsi": {
                        "type": "string",
                        "example": "We are committed to delivering the best service for our community"
                    },
                    "tombol_teks": {
                        "type": "string",
                        "example": "Learn More"
                    },
                    "tombol_link": {
                        "type": "string",
                        "example": "https://example.com"
                    },
                    "gambar": {
                        "properties": {
                            "filename": {
                                "type": "string",
                                "example": "slide1.jpg"
                            },
                            "url": {
                                "type": "string",
                                "example": "http://localhost:8000/storage/slide/slide1.jpg"
                            },
                            "full_url": {
                                "type": "string",
                                "example": "http://localhost:8000/storage/slide/slide1.jpg"
                            }
                        },
                        "type": "object"
                    },
                    "urutan": {
                        "type": "integer",
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "example": "active"
                    },
                    "status_label": {
                        "type": "string",
                        "example": "Aktif"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01 10:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01 12:00:00"
                    },
                    "created_at_human": {
                        "type": "string",
                        "example": "2 hours ago"
                    },
                    "updated_at_human": {
                        "type": "string",
                        "example": "1 hour ago"
                    }
                },
                "type": "object"
            },
            "UnduhanResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "judul": {
                        "type": "string",
                        "example": "Panduan Penggunaan Aplikasi"
                    },
                    "deskripsi": {
                        "type": "string",
                        "example": "Panduan lengkap penggunaan aplikasi untuk masyarakat"
                    },
                    "file": {
                        "properties": {
                            "filename": {
                                "type": "string",
                                "example": "panduan.pdf"
                            },
                            "original_name": {
                                "type": "string",
                                "example": "Panduan Penggunaan Aplikasi.pdf"
                            },
                            "extension": {
                                "type": "string",
                                "example": "pdf"
                            },
                            "url": {
                                "type": "string",
                                "example": "http://localhost:8000/storage/unduhan/panduan.pdf"
                            },
                            "download_url": {
                                "type": "string",
                                "example": "http://localhost:8000/api/unduhan/1/download"
                            },
                            "size": {
                                "type": "integer",
                                "example": 1048576
                            },
                            "size_human": {
                                "type": "string",
                                "example": "1.00 MB"
                            }
                        },
                        "type": "object"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01 10:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01 12:00:00"
                    },
                    "created_at_human": {
                        "type": "string",
                        "example": "2 hours ago"
                    },
                    "updated_at_human": {
                        "type": "string",
                        "example": "1 hour ago"
                    }
                },
                "type": "object"
            },
            "VisiMisi": {
                "title": "VisiMisi",
                "description": "Visi Misi model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "visi",
                            "misi"
                        ],
                        "example": "visi"
                    },
                    "title": {
                        "type": "string",
                        "example": "Visi Organisasi"
                    },
                    "content": {
                        "type": "string",
                        "example": "Menjadi organisasi terdepan dalam pelayanan publik"
                    },
                    "description": {
                        "type": "string",
                        "example": "Deskripsi tambahan untuk item ini"
                    },
                    "icon": {
                        "type": "string",
                        "example": "eye"
                    },
                    "color_class": {
                        "type": "string",
                        "example": "blue"
                    },
                    "order_position": {
                        "type": "integer",
                        "example": 1
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "type_name": {
                        "type": "string",
                        "example": "Visi"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "VisiMisiResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation completed successfully"
                    },
                    "data": {
                        "$ref": "#/components/schemas/VisiMisi"
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "An error occurred"
                    },
                    "error": {
                        "type": "string",
                        "example": "Detailed error message"
                    }
                },
                "type": "object"
            },
            "AgendaRequest": {
                "title": "Agenda Request",
                "description": "Schema untuk request data agenda",
                "required": [
                    "judul",
                    "konten",
                    "tanggal_agenda",
                    "kategori",
                    "prioritas",
                    "status"
                ],
                "properties": {
                    "judul": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Rapat Koordinasi Pembangunan Infrastruktur"
                    },
                    "konten": {
                        "type": "string",
                        "example": "Agenda ini akan membahas progress pembangunan infrastruktur di wilayah kecamatan..."
                    },
                    "tanggal_agenda": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-08-25"
                    },
                    "waktu_mulai": {
                        "type": "string",
                        "format": "time",
                        "example": "09:00",
                        "nullable": true
                    },
                    "waktu_selesai": {
                        "type": "string",
                        "format": "time",
                        "example": "11:00",
                        "nullable": true
                    },
                    "lokasi": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Ruang Meeting Dinas",
                        "nullable": true
                    },
                    "penyelenggara": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Bagian Perencanaan",
                        "nullable": true
                    },
                    "gambar": {
                        "description": "File gambar (jpeg,png,jpg,gif,webp), max 2MB",
                        "type": "string",
                        "format": "binary",
                        "nullable": true
                    },
                    "lampiran": {
                        "description": "File lampiran (pdf,doc,docx,xls,xlsx,ppt,pptx), max 5MB",
                        "type": "string",
                        "format": "binary",
                        "nullable": true
                    },
                    "kategori": {
                        "type": "string",
                        "enum": [
                            "rapat",
                            "sosialisasi",
                            "workshop",
                            "acara_publik"
                        ],
                        "example": "rapat"
                    },
                    "prioritas": {
                        "type": "string",
                        "enum": [
                            "rendah",
                            "sedang",
                            "tinggi",
                            "mendesak"
                        ],
                        "example": "tinggi"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "draft",
                            "published",
                            "selesai",
                            "dibatalkan"
                        ],
                        "example": "published"
                    },
                    "is_featured": {
                        "type": "boolean",
                        "example": false,
                        "nullable": true
                    },
                    "is_publik": {
                        "type": "boolean",
                        "example": true,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "AgendaResource": {
                "title": "Agenda Resource",
                "description": "Resource untuk menampilkan data agenda",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "judul": {
                        "type": "string",
                        "example": "Rapat Koordinasi Pembangunan Infrastruktur"
                    },
                    "slug": {
                        "type": "string",
                        "example": "rapat-koordinasi-pembangunan-infrastruktur"
                    },
                    "konten": {
                        "type": "string",
                        "example": "Agenda ini akan membahas progress pembangunan infrastruktur di wilayah kecamatan..."
                    },
                    "tanggal_agenda": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-08-25"
                    },
                    "waktu_mulai": {
                        "type": "string",
                        "format": "time",
                        "example": "09:00"
                    },
                    "waktu_selesai": {
                        "type": "string",
                        "format": "time",
                        "example": "11:00"
                    },
                    "lokasi": {
                        "type": "string",
                        "example": "Ruang Meeting Dinas"
                    },
                    "penyelenggara": {
                        "type": "string",
                        "example": "Bagian Perencanaan"
                    },
                    "kategori": {
                        "type": "string",
                        "enum": [
                            "rapat",
                            "sosialisasi",
                            "workshop",
                            "acara_publik"
                        ],
                        "example": "rapat"
                    },
                    "kategori_label": {
                        "type": "string",
                        "example": "Rapat"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "draft",
                            "published",
                            "selesai",
                            "dibatalkan"
                        ],
                        "example": "published"
                    },
                    "status_label": {
                        "type": "string",
                        "example": "Published"
                    },
                    "prioritas": {
                        "type": "string",
                        "enum": [
                            "rendah",
                            "sedang",
                            "tinggi",
                            "mendesak"
                        ],
                        "example": "tinggi"
                    },
                    "prioritas_label": {
                        "type": "string",
                        "example": "Tinggi"
                    },
                    "is_publik": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_featured": {
                        "type": "boolean",
                        "example": false
                    },
                    "gambar": {
                        "type": "string",
                        "example": "http://example.com/storage/agenda/image.jpg",
                        "nullable": true
                    },
                    "lampiran": {
                        "type": "string",
                        "example": "http://example.com/storage/agenda/document.pdf",
                        "nullable": true
                    },
                    "nama_lampiran": {
                        "type": "string",
                        "example": "Dokumen Lampiran.pdf",
                        "nullable": true
                    },
                    "tanggal_agenda_formatted": {
                        "type": "string",
                        "example": "25 Agustus 2025"
                    },
                    "waktu_agenda_formatted": {
                        "type": "string",
                        "example": "09:00 - 11:00"
                    },
                    "created_by": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Admin User"
                            },
                            "email": {
                                "type": "string",
                                "example": "admin@example.com"
                            }
                        },
                        "type": "object"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-08-23T10:00:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2025-08-23T10:00:00.000000Z"
                    }
                },
                "type": "object"
            },
            "GaleriResource": {
                "title": "Gallery Resource",
                "description": "Gallery resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "gambar": {
                        "type": "string",
                        "example": "202401/1705123456_unique123.jpg"
                    },
                    "keterangan": {
                        "type": "string",
                        "example": "Foto kegiatan gotong royong di kampung"
                    },
                    "image_url": {
                        "type": "string",
                        "example": "http://localhost:8000/storage/galeri/202401/1705123456_unique123.jpg"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-15T10:30:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-15T10:30:00.000000Z"
                    }
                },
                "type": "object"
            },
            "PejabatResource": {
                "title": "Pejabat Resource",
                "description": "Pejabat resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "nama": {
                        "type": "string",
                        "example": "Dr. John Doe, M.T."
                    },
                    "jabatan": {
                        "type": "string",
                        "example": "Kepala Dinas Perumahan dan Kawasan Permukiman"
                    },
                    "nip": {
                        "type": "string",
                        "example": "197001011990011001",
                        "nullable": true
                    },
                    "foto": {
                        "type": "string",
                        "example": "http://localhost:8000/storage/pejabat/john-doe.jpg",
                        "nullable": true
                    },
                    "foto_name": {
                        "type": "string",
                        "example": "john-doe.jpg",
                        "nullable": true
                    },
                    "urutan": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-15 10:30:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-15 10:30:00"
                    }
                },
                "type": "object"
            },
            "PesanResource": {
                "title": "Pesan Resource",
                "description": "Pesan resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "nama_pengirim": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email_pengirim": {
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "telepon": {
                        "type": "string",
                        "example": "081234567890",
                        "nullable": true
                    },
                    "tipe_pesan": {
                        "type": "string",
                        "enum": [
                            "pengaduan",
                            "pertanyaan",
                            "saran",
                            "lainnya"
                        ],
                        "example": "pertanyaan"
                    },
                    "subjek": {
                        "type": "string",
                        "example": "Pertanyaan tentang perizinan bangunan"
                    },
                    "isi_pesan": {
                        "type": "string",
                        "example": "Saya ingin bertanya tentang prosedur perizinan bangunan..."
                    },
                    "lampiran": {
                        "type": "string",
                        "example": "http://localhost:8000/storage/pesan/document.pdf",
                        "nullable": true
                    },
                    "lampiran_name": {
                        "type": "string",
                        "example": "document.pdf",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "unread",
                            "read",
                            "replied"
                        ],
                        "example": "unread"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-15 10:30:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-15 10:30:00"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "Success": {
                "description": "Successful operation",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ApiResponse"
                        }
                    }
                }
            },
            "ValidationError": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "NotFound": {
                "description": "Resource not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Resource not found"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "Unauthorized access",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Unauthorized"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "Forbidden": {
                "description": "Forbidden access",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Forbidden"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "ServerError": {
                "description": "Internal server error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Internal server error"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Enter token in format: Bearer {token}",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Agenda",
            "description": "API Endpoints untuk mengelola agenda"
        },
        {
            "name": "Authentication",
            "description": "API endpoints for user authentication"
        },
        {
            "name": "Dashboard",
            "description": "Dashboard management endpoints for admin panel statistics and overview"
        },
        {
            "name": "Galeri",
            "description": "API endpoints for gallery management"
        },
        {
            "name": "Pejabat",
            "description": "API endpoints for official management"
        },
        {
            "name": "Pesan",
            "description": "API endpoints for contact message management"
        },
        {
            "name": "Slides",
            "description": "API endpoints for slides/carousel management"
        },
        {
            "name": "Unduhan",
            "description": "API endpoints for file downloads management"
        },
        {
            "name": "User Management",
            "description": "User management endpoints for admin panel"
        },
        {
            "name": "Visi Misi",
            "description": "API endpoints for managing Visi Misi"
        },
        {
            "name": "Berita",
            "description": "Berita"
        }
    ]
}